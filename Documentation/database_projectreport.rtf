{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f36\froman\fcharset238\fprq2 Times New Roman CE;}{\f37\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f39\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f40\froman\fcharset162\fprq2 Times New Roman Tur;}{\f41\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f42\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f43\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f44\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f56\fmodern\fcharset238\fprq1 Courier New CE;}{\f57\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f59\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f60\fmodern\fcharset162\fprq1 Courier New Tur;}{\f61\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f62\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f63\fmodern\fcharset186\fprq1 Courier New Baltic;}
{\f64\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\s1\ql \li0\ri0\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{
\s2\ql \li0\ri0\nowidctlpar\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 2;}{\s3\ql \li0\ri0\nowidctlpar\faauto\outlinelevel2\rin0\lin0\itap0 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 3;}{\s4\ql \li0\ri0\nowidctlpar\faauto\outlinelevel3\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 4;}{\*\cs10 
\additive \ssemihidden Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\listtable{\list\listtemplateid-1240462342\listsimple{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }{\listname ;}\listid70545794}{\list\listtemplateid-1240462342\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }{\listname ;}\listid186798944}{\list\listtemplateid833661092\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\f0\fbias0 }{\listname ;}\listid947663478}{\list\listtemplateid-1240462342\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }{\listname ;}\listid1863662117}{\list\listtemplateid-1240462342\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat2
\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }{\listname ;}\listid2102602710}}{\*\listoverridetable{\listoverride\listid186798944\listoverridecount0\ls1}{\listoverride\listid186798944\listoverridecount1{\lfolevel
\listoverrideformat{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat2\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }}\ls2}{\listoverride\listid186798944\listoverridecount1{\lfolevel
\listoverrideformat{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat3\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }}\ls3}{\listoverride\listid186798944\listoverridecount1{\lfolevel
\listoverrideformat{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat4\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }}\ls4}{\listoverride\listid186798944\listoverridecount1{\lfolevel
\listoverrideformat{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat5\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }}\ls5}{\listoverride\listid186798944\listoverridecount1{\lfolevel
\listoverrideformat{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat6\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }}\ls6}{\listoverride\listid186798944\listoverridecount1{\lfolevel
\listoverrideformat{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat7\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }}\ls7}{\listoverride\listid186798944\listoverridecount1{\lfolevel
\listoverrideformat{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat8\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }}\ls8}{\listoverride\listid186798944\listoverridecount1{\lfolevel
\listoverrideformat{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat9\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }}\ls9}{\listoverride\listid1863662117\listoverridecount0\ls10}
{\listoverride\listid1863662117\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat2\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }}\ls11}
{\listoverride\listid1863662117\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat3\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }}\ls12}
{\listoverride\listid1863662117\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat4\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }}\ls13}
{\listoverride\listid947663478\listoverridecount0\ls14}{\listoverride\listid947663478\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat2\levelold\levelspace0\levelindent360
{\leveltext\'02\'00.;}{\levelnumbers\'01;}\f0\fbias0 }}\ls15}{\listoverride\listid70545794\listoverridecount0\ls16}{\listoverride\listid2102602710\listoverridecount0\ls17}{\listoverride\listid2102602710\listoverridecount1{\lfolevel\listoverrideformat
{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat3\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }}\ls18}{\listoverride\listid2102602710\listoverridecount1{\lfolevel\listoverrideformat
{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat4\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }}\ls19}{\listoverride\listid2102602710\listoverridecount1{\lfolevel\listoverrideformat
{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat5\levelold\levelspace0\levelindent360{\leveltext\'01\'00;}{\levelnumbers\'01;}\f0\fbias0 }}\ls20}}{\*\rsidtbl \rsid5581439}{\*\generator Microsoft Word 10.0.2627;}{\info
{\title SCOP Viewer for BLISS}{\author Deacon Sweeney}{\operator Deacon Sweeney}{\creatim\yr2005\mo6\dy26\hr18\min42}{\revtim\yr2005\mo6\dy26\hr18\min42}{\version2}{\edmins1}{\nofpages9}{\nofwords2589}{\nofchars14762}{\*\company Home PC}{\nofcharsws17317}
{\vern16437}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind4\viewscale100\nolnhtadjtbl\rsidroot5581439 \fet0
\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \qc \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\fs28\insrsid5581439 SCOP Viewer for BLISS
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5581439 Introduction
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5581439 
This report documents the Structural Classification of Proteins (SCOP) Domain Viewer project (includes Database Domain Viewer and SCOP Iterator class) developed during spring \rquote 
04 in order to fulfill the requirement for CS499. The SCOP Domain Viewer is a graphical user interface through which a user can browse the SCOP data structure and view protein domains through BLISS. The Database Domain Viewer is very much like the SCOP Do
m
ain Viewer but it browses the directory structure for protein domains instead of SCOP structure. The documentation includes detailed description of SCOP, basic requirements for the Viewer, the software design document, screenshots of the Viewer and its as
sociated GUIs, any known issues with the Viewer, and finally, lists few enhancements that could be made to it in the future. 
\par 
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5581439 Background}{\b\super\insrsid5581439 1}{\b\insrsid5581439 
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5581439 The SCOP is a hierarchical ordering of all known proteins of known structure with respect to their functional, structu
ral and evolutionary relationships. There are 7 different levels of hierarchy in SCOP in the following sequence from top-down: Classes, Folds, Superfamilies, Families, Proteins, Species and Domains. According to this hierarchy, the closely related protein
 domains fall into the lowest class or the Domains and as it goes up the chain, the similarity decreases. Currently, there are about 20619 PDB entries in SCOP and increasing every month.
\par 
\par The entire SCOP structure is available in parseable format in text fi
les (altogether 10MB). These files can be loaded with the SCOP Module available for Python through www.biopython.org. The SCOP Domain Viewer uses this module to load and access the SCOP Data Structure.
\par 
\par Although SCOP domains can be viewed and searched on-l
ine, the main motivation behind developing the SCOP Domain Viewer is to incorporate it into BLISS and make use of its tools for protein structure analysis and fold recognition searches. In addition to this, the SCOP Domain Viewer provides the functionalit
y to search SCOP, save results, edit results and view saved results. The following section lists the requirements for the SCOP Domain Viewer.
\par 
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5581439 Development
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5581439 
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\i\insrsid5581439 Viewer Requirements Specifications
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5581439 The following are the requirements that are set forth for the SCOP Domain Viewer:
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 1\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec\pnstart1\pnindent360 }\faauto\ls1\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
Windows Explorer type of browser to parse the SCOP Data Structure is needed.
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 2\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec\pnstart2\pnindent360 }\faauto\ls2\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
Both the SCOP browser and the BLISS Molecular Viewer should be on the same window
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 3\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec\pnstart3\pnindent360 }\faauto\ls3\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
Searching SCOP with regular expressions in addition to search options like searching comments file and choosing type of SCOP node to search for.
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 4\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec\pnstart4\pnindent360 }\faauto\ls4\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
Provide functionality to edit search results by removing a node.
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 5\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec\pnstart5\pnindent360 }\faauto\ls5\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
Save the results as a profile with the abi
lity load it at a later time and independent of the original SCOP Structure. A directory structure based on the hierarchy will be built for the profile and all protein domains associated with the search results will be copied into it.
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 6\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec\pnstart6\pnindent360 }\faauto\ls6\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
Functionality to look-up the selected node in Search Results, in the original SCOP Domain Viewer
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec\pnstart7\pnindent360 }\faauto\ls7\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
The user should be able to select a node in the SCOP Domain Viewer and save it as a profile.
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 8\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec\pnstart8\pnindent360 }\faauto\ls8\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
The Database Domain Viewer browses a local/user-defined database (directories) for protein domains.
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 9\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec\pnstart9\pnindent360 }\faauto\ls9\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
Implement an iterator class to add additional components to SCOP Domain Viewer on BLISS.
\par }\pard \ql \li360\ri0\nowidctlpar\faauto\rin0\lin360\itap0 {\insrsid5581439 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 All the above listed requirements are met. Any known issues or bugs are listed in this paper.
\par }\pard \ql \li360\ri0\nowidctlpar\faauto\rin0\lin360\itap0 {\insrsid5581439 
\par }\pard\plain \s2\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\i\insrsid5581439 Software Design Documentation
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5581439 The above listed requirements are implemented in 5 files as listed in Table 1.
\par 
\par }\trowd \irow0\irowband0\ts11\trgaph108\trleft-108\trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cltxlrtb\clftsWidth3\clwWidth3348\clshdrawnil 
\cellx3240\clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cltxlrtb\clftsWidth3\clwWidth4324\clshdrawnil \cellx7564\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\rin0\lin0 {\b\insrsid5581439 File\cell 
Classes\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\insrsid5581439 \trowd \irow0\irowband0\ts11\trgaph108\trleft-108\trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw15 
\clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cltxlrtb\clftsWidth3\clwWidth3348\clshdrawnil \cellx3240\clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 
\cltxlrtb\clftsWidth3\clwWidth4324\clshdrawnil \cellx7564\row }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\rin0\lin0 {\insrsid5581439 ScopDomainViewer.py\cell (1) ScopNode, (2) ScopViewer\cell }\pard 
\ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\insrsid5581439 \trowd \irow1\irowband1\ts11\trgaph108\trleft-108\trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 
\clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cltxlrtb\clftsWidth3\clwWidth3348\clshdrawnil \cellx3240\clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cltxlrtb\clftsWidth3\clwWidth4324\clshdrawnil 
\cellx7564\row }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\rin0\lin0 {\insrsid5581439 DatabaseDomainViewer.py\cell (1) DirNode, (2) UserDbViewer\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\insrsid5581439 
\trowd \irow2\irowband2\ts11\trgaph108\trleft-108\trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cltxlrtb\clftsWidth3\clwWidth3348\clshdrawnil 
\cellx3240\clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cltxlrtb\clftsWidth3\clwWidth4324\clshdrawnil \cellx7564\row }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\rin0\lin0 {\insrsid5581439 
ScopSearch.py\cell (1) SearchFrame\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\insrsid5581439 \trowd \irow3\irowband3\ts11\trgaph108\trleft-108\trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt
\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cltxlrtb\clftsWidth3\clwWidth3348\clshdrawnil \cellx3240\clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 
\cltxlrtb\clftsWidth3\clwWidth4324\clshdrawnil \cellx7564\row }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\rin0\lin0 {\insrsid5581439 SearchResults.py\cell (1) ResultsScopNode,  (2) ResultsFrame\cell }\pard 
\ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\insrsid5581439 \trowd \irow4\irowband4\ts11\trgaph108\trleft-108\trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 
\clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cltxlrtb\clftsWidth3\clwWidth3348\clshdrawnil \cellx3240\clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cltxlrtb\clftsWidth3\clwWidth4324\clshdrawnil 
\cellx7564\row }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\rin0\lin0 {\insrsid5581439 ScopIterator.py\cell (1) ScopIterator\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\insrsid5581439 
\trowd \irow5\irowband5\lastrow \ts11\trgaph108\trleft-108\trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 
\cltxlrtb\clftsWidth3\clwWidth3348\clshdrawnil \cellx3240\clvertalt\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cltxlrtb\clftsWidth3\clwWidth4324\clshdrawnil \cellx7564\row }\pard 
\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\insrsid5581439 Table 1:}{\insrsid5581439  All program files associated with this project
\par 
\par In addition to the above files, the parms.py should be updated with various parameters.
\par 
\par }{\ul\insrsid5581439 SCOP
\par }{\insrsid5581439 The current release version of SCOP files being used is 1.65. The following are the parseable files that are needed to run SCOP:
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 1\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec\pnstart1\pnindent360 }\faauto\ls10\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
dir.cla.scop.txt_1.65      -Classification file
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 2\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec\pnstart2\pnindent360 }\faauto\ls11\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
dir.com.scop.txt_1.65    -Comments file
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 3\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec\pnstart3\pnindent360 }\faauto\ls12\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
dir.des.scop.txt_1.65      -Description file
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 4\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec\pnstart4\pnindent360 }\faauto\ls13\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
dir.hie.scop.txt_1.65      -Hierarchy file
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par The above listed files are found at: }{\ul\cf2\insrsid5581439 http://scop.mrc-lmb.cam.ac.uk/scop/parse/index.html}{\insrsid5581439 
\par The protein domains can be downloaded at: }{\ul\cf2\insrsid5581439 http://astral.berkeley.edu/pdbstyle-1.65.html}{\insrsid5581439  (2.7GB of zipped files)
\par 
\par With these files saved locally and the Biopython module installed, SCOP can be loaded with the following lines of code:
\par 
\par 
\par 
\par }{\f2\insrsid5581439 from Bio import SCOP
\par 
\par cla_file = file('pathToClaFile', 'r')
\par des_file = file('pathToDesFile', 'r')
\par hie_file = file('pathToHieFile', 'r')
\par 
\par ScopStructure = SCOP.Scop(cla_file, des_file, hie_file)
\par #To get a list of all domains and all their identifiers
\par ScopDomains = ScopStructure.getDomains()}{\insrsid5581439    
\par 
\par The SCOP Protein domains are available online for download. The domains are of the format \lquote d1ks2e.ent\rquote . The entire database is at the minimum occupies 12 GB.
\par 
\par }{\ul\insrsid5581439 ScopIterator
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f2\insrsid5581439 
\par Class: ScopIterator
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5581439 The }{\f2\insrsid5581439 ScopIterator class }{\insrsid5581439 
provides an interface to SCOP through which it can be easily accessed. Only the location of the parseable files should be passed into it. In addition to the SCOP, it can also handle the small SCOP structures in profiles.}{\f2\insrsid5581439 
\par }{\insrsid5581439 
\par Object Instantiation
\par \tab iter = ScopIterator(isAprofile) #isAprofile = 1 if it is a profile, else 0 
\par 
\par }{\i\insrsid5581439 Functions:
\par }{\insrsid5581439 loadScop(cla=None, des=None, hie=None)
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab 
This function loads the SCOP Structure. The arguments cla, des and hie are paths to classification, description and hierarchy files for SCOP. If no arguments are given, the paths are taken from parms.py file.  
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par load_first_domain()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab Loads the first domain and also keeps track of the location of the domain file. The location to the domain file can be accessed by iter.currentDomainLocation.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par load_next_domain()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab Similar to the above function but just increments the pointer to the item in ScopDomains list. 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par get_current_domain_location()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab Retrieves the location of the selected domain\rquote s protein domain file
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par get_current_domain_lineage()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab This function returns the lineage of the selected domain as a list with the format as follows: [\lquote Class: All Alpha Proteins\rquote , \lquote Fold: Globins
\rquote  \'85.] 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par getDomainBySid(sid)
\par \tab Returns the domain identified by \lquote sid\rquote 
\par 
\par getDomainBySunid(sunid)
\par \tab Returns the domain identified by \lquote sunid\rquote 
\par 
\par getDomainsListByPdbid(pdbid)
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab Since several domains can be of the same PDB Entry, this function returns all the domains that are identified by the \lquote pdbid\rquote 
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 areDomainsOfSameClass(doms), areDomainsOfSameFold(doms), areDomainsOfSameSuperfamily(doms), areDomainsOfSameFamily(doms):
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab These functions perform similar operation. They take in a list of protein domains and return a Boolean value if they all belong to the same type (Class, Fold, etc).

\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 \tab 
\par }{\ul\insrsid5581439 ScopDomainViewer
\par }{\insrsid5581439 
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f2\insrsid5581439 Class: ScopNode
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f2\insrsid5581439 \tab }{\insrsid5581439 This class is exactly same in structure when compared to the }{\f2\insrsid5581439 DirNode}{
\insrsid5581439  and }{\f2\insrsid5581439 ResultsNode}{\insrsid5581439 
 classes, but slightly varies in how the functionality is implemented. Each ScopNode is a frame that contains a +/- button, a label, an empty label (for padding) and functions bound to the mouse click events on the frame.
\par 
\par }{\i\insrsid5581439 Variables}{\insrsid5581439 :
\par \tab thisNode- is a Node() object imported from Bio::SCOP module
\par 
\par }{\i\insrsid5581439 Functions}{\insrsid5581439 :
\par createButton()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab Creates +/- button and pads the frame according to the hierarchy to get a hierarchical view of the tree structure.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par displayLineage()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab This function is called every ti
me when mouse click event occurs on the frame. From the current node, iterates to the top of the SCOP structure and builds a lineage that is displayed in the lineage text box.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f2\insrsid5581439 Class: ScopViewer
\par }\pard\plain \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f2\insrsid5581439 \tab }{\insrsid5581439 This is the main class for the SCOP Domain Viewer. All the SCOP browser\rquote 
s functionality is handled in this class. The main objects in the SCOP browser are treeWinText text box, viewButton and lineageBox text box
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par }{\i\insrsid5581439 Variables}{\insrsid5581439 :
\par bliss_level - This is the bottom pane. It contains the BLISS Molecular Viewer.
\par }\pard \ql \fi-1800\li1800\ri0\nowidctlpar\faauto\rin0\lin1800\itap0 {\insrsid5581439 viewer_window - This is the Toplevel() window on which the Browser and Viewer are built upon.
\par topMenuSystem - This is the MenuSystem object in Bliss.py. The only objective of this variable is to access the list of open Viewer windows.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par }{\i\insrsid5581439 Functions}{\insrsid5581439 :
\par selectNode(nde)
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab This function is executed each time a +/- button is clicked on a ScopNode frame in treeWinText text box. The contraction and expansion of nodes is handled here
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 saveSelectedNode(), validateName()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab These functions initiate saving the selected Node as
 a profile. The validateName function verifies that a duplicate profile name does not exist before creating a new profile.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par finishOffSaving()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab This function creates the classification, description and hierarchy files for the selected node. This is done by 
parsing the entire tree structure under the selected node and adding hie, cla and des records to the SCOP Parseable files.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par copyPDBs(savePath)
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab After the parseable files are created in finishOffSaving() this function is called to create a directory structure based on the selected node\rquote 
s SCOP structure and to create an independent database of protein domains. The \lquote savePath\rquote  is actually the path to the saved profile.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par expandToSelectedNode(lineage)
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab When the button \lquote View Selected Node in SCOP Domain Viewer\rquote  is
 selected in ScopResults, this function is called to display the desired node. The argument lineage is a list through which the desired Node can be browsed to. 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par loadProfile(), loadSelectedProfile()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab The loadProfile function gets the input from the user on
 which profile to load and the loadSelectedProfile function actually loads the profile by instantiating a ResultsFrame.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par }{\ul\insrsid5581439 DatabaseDomainViewer}{\insrsid5581439 \tab 
\par }{\ul\insrsid5581439 
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f2\insrsid5581439 Class: DirNode
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f2\insrsid5581439 \tab }{\insrsid5581439 This class is exactly same in structure when compared to the }{\f2\insrsid5581439 ScopNode}{
\insrsid5581439  class, but slightly varies in how the functionality is implemented. Each DirNode is a frame that contains a +/- button, a label and functions bound to the mouse click events on the frame.
\par 
\par }{\i\insrsid5581439 Variables}{\insrsid5581439 :
\par \tab thisNode - is the name of File/Folder 
\par \tab thisPath - is the path to \lquote thisNode\rquote 
\par 
\par }{\i\insrsid5581439 Functions}{\insrsid5581439 :
\par createButton()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab Creates +/- button and pads the frame according to the hierarchy to get a hierarchical view of the tree structure.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 displayLineage()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab This function is called every time when mouse click event occurs on the DirNode frame. The path 
to the selected node and if it is a leaf, the protein domain files in it are displayed in the lineage text box.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par isCurrentNodeALeaf()
\par \tab The conditions for considering a node as a leaf are:
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 1.\tab}}\pard \ql \fi-360\li2160\ri0\nowidctlpar\tx2160{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec\pnstart1\pnindent360 {\pntxta .}}\faauto\ls14\rin0\lin2160\itap0\pararsid5581439 {\insrsid5581439 
Has no directories
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 2.\tab}}\pard \ql \fi-360\li2160\ri0\nowidctlpar\tx2160{\*\pn \pnlvlbody\ilvl0\ls15\pnrnot0\pndec\pnstart2\pnindent360 {\pntxta .}}\faauto\ls15\rin0\lin2160\itap0\pararsid5581439 {\insrsid5581439 
Has at least 1 .ent file
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par isCurrentNodeValid()
\par \tab Only the nodes with directories in it are displayed
\par 
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f2\insrsid5581439 Class: UserDbViewer
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\i\f2\insrsid5581439 \tab }{\insrsid5581439 This is the main class for the Database Domain Viewer. All the User-Database browser\rquote 
s functionality is handled in this class. The main objects in the SCOP browser are treeWinText text box, viewButton and lineageBox text box.
\par 
\par }{\i\insrsid5581439 Variables}{\insrsid5581439 :
\par bliss_level - This is the bottom pane. It contains the BLISS Molecular Viewer.
\par }\pard \ql \fi-1800\li1800\ri0\nowidctlpar\faauto\rin0\lin1800\itap0 {\insrsid5581439 toplevelwindow - This is the Toplevel() window on which the Browser and Viewer are  built upon.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par }{\i\insrsid5581439 Functions}{\insrsid5581439 :
\par selectNode(nde)
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab This function is executed each time a +/- button is clicked on a DirNode frame in treeWinText text box. The contraction and expansion of nodes is handled here
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par DisplaySelected(), displayPDB()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab If there are more than 1 protein domain files in the folder, a selection dialog box pops up to request the user to choose one protein domain.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par }\pard\plain \s3\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel2\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\ul\insrsid5581439 ScopResults
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5581439 
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f2\insrsid5581439 Class: ResultsScopNode
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f2\insrsid5581439 \tab }{\insrsid5581439 This class is exactly same in structure when compared to the }{\f2\insrsid5581439 ScopNode}{
\insrsid5581439  class, but slightly varies in how t
he functionality is implemented. Each ResultsScopNode is a frame that contains a +/- button, a label, an empty label (for padding) and functions bound to the mouse click events on the frame. Each ResultsScopNode has an \lquote id\rquote 
 field that identifies the SCOP s
tructure to which the selected node belongs to. This is necessary because in a profile/search results multiple SCOP structures are generated and in order to display them in the treeWinText text box this identification is needed
\par }{\i\insrsid5581439 
\par 
\par Variables}{\insrsid5581439 :
\par \tab thisNode - is a Node() object imported from Bio::SCOP module
\par \tab id - Identificaiton of the Node w.r.t the SCOP structure it belongs to
\par 
\par }{\i\insrsid5581439 Functions}{\insrsid5581439 :
\par createButton()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab Creates +/- button and pads the frame according to the hierarchy to get a hierarchical view of the tree structure.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par displayLineage()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab 
This function is called every time when mouse click event occurs on the frame. From the current node, iterates to the top of the SCOP structure and builds a lineage that is displayed in the lineage text box. In search results, the 
toplevel SCOP nodes are subset of the original SCOP data structure. For this reason there is a need to keep track of the full lineage. To accommodate this when the SCOP search results are generated the lineage of the toplevel node is padded into the 
\lquote _hie.txt\rquote  file.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f2\insrsid5581439 Class: ResultsFrame
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f2\insrsid5581439 \tab }{\insrsid5581439 
This class handles displaying, saving and loading results. The main objects in the SCOP browser are treeWinText text box, viewButton and lineageBox text box. 
\par 
\par }{\i\insrsid5581439 Variables}{\insrsid5581439 :
\par toplevel - This is the bottom pane. It contains the Bliss Molecular Viewer.
\par }\pard \ql \fi-1800\li1800\ri0\nowidctlpar\faauto\rin0\lin1800\itap0 {\insrsid5581439 viewer_window - This is the Toplevel() window on which the Browser and Viewer are built upon.
\par }\pard \ql \fi-1440\li1440\ri0\nowidctlpar\faauto\rin0\lin1440\itap0 {\insrsid5581439 ScopViewer - This is the ScopDomainViewer. The only objective of this is to access the MenuSystem object in Bliss.py to keep track of open Viewer windows.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par }{\i\insrsid5581439 Functions}{\insrsid5581439 :
\par dispInScopDomViewer()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab 
When the user chooses to view the selected domain in the original SCOP Domain Viewer, this function builds a list of hierarchy and passes it to the SCOP Domain Viewer object to browse to the selected node.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par selectNode(nde)
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab This function is executed each time a +/- button is clicked on a ScopNode frame in treeWinText text box. The contraction and expansion of nodes is handled here
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par saveSelectedNode(), validateName()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab These functions initiate saving the selected Node as a profile. The validateName function v
erifies that a duplicate profile name does not exist before creating a new profile.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par RemoveSelectedNode()
\par \tab A node can be selected in the browser for removal from the search results.
\par finishOffSaving()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab This function is different from the one in ScopDomainVi
ewer.py. Since the classification, description and hierarchy files are already created, this function copies the search results to profile directory.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439  
\par copyPDBs(savePath)
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab After the parseable files are copied to the current profile directory in finishOffSa
ving(), this function is called to create a directory structure based on the selected node\rquote s SCOP structure and to create an independent database of protein domains. The savePath is actually the path to the saved profile.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par loadProfile(), loadSelectedProfile()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab 
The loadProfile function gets the input from the user on which profile to load and the loadSelectedProfile function actually loads the profile by instantiating a ResultsFrame.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par }\pard\plain \s3\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel2\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\ul\insrsid5581439 ScopSearch
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f2\insrsid5581439 
\par Class: SearchFrame
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5581439 \tab This function takes in the search options 
and add/exclude keywords from the user through a search GUI and then searches the entire SCOP Structure. Upon the generation of results, it loads them into the ResultsFrame object. The search functionality accepts regular expressions. The search keywords 
are saved into keywords.ini for later use.
\par 
\par }{\i\insrsid5581439 Functions}{\insrsid5581439 :
\par loadKeywords()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab This function loads keywords from keywords.ini file. If there is no .ini file, Add and Exclude list boxes are left empty.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par updateKeywords()
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab After the completion of search and before exiting the updated keywords list is saved. 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par okButton():
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab Empties the previous search results cache, builds lists of compiled regular expressions from the keywords and initiates search.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par keywordNodeMatch(node)
\par \tab Searches the node and when all regular expressions are satisfied returns true.
\par 
\par 
\par findKeyword(node)
\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 \tab When the KeywordNodeMatch returns true for a node, this function initiates save the node in search results directory. 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5581439 Conclusion
\par }\pard\plain \s4\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel3\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\i\insrsid5581439 Issues
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 1\tab}}\pard\plain \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls16\pnrnot0\pndec\pnstart1\pnindent360 }\faauto\ls16\rin0\lin720\itap0\pararsid5581439 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5581439 Memory issues: Memory management should be done to keep track of open windows and warn the user if a critical limit is reached.
\par }\pard \ql \fi-360\li1440\ri0\nowidctlpar\tx1440\faauto\ilvl12\rin0\lin1440\itap0\pararsid5581439 {\f2\insrsid5581439 o\tab }{\insrsid5581439 The SCOP structure in memory occupies 86MB.
\par }{\f2\insrsid5581439 o\tab }{\insrsid5581439 When a domain is viewed in BLISS Molecular Viewer the size varies with a minimum of 100MB 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\insrsid5581439 From the above criteria if multiple windows are open there will be a significant reduction in system performance.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par }\pard\plain \s4\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel3\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\i\insrsid5581439 Enhancements
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5581439 Following are list of enhancements that would make the Viewer program a little robust and user-friendly.
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 2\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls17\pnrnot0\pndec\pnstart2\pnindent360 }\faauto\ls17\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 Create a function in 
Bliss.py that can replace the displaySelected() function in ScopDomainViewer.py, SearchResults.py and DatabaseDomainViewer.py. As of now, the displaySelected() function in all the above-mentioned files has same code.
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 3\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls18\pnrnot0\pndec\pnstart3\pnindent360 }\faauto\ls18\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
Optimize the search functionality to make the search faster. 
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 4\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls19\pnrnot0\pndec\pnstart4\pnindent360 }\faauto\ls19\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
From the toolbar in Bliss, when SCOP Domain Browser is selected, give the user the option to load entire SCOP Structure or to load a profile. 
\par {\pntext\pard\plain\hich\af0\dbch\af0\loch\f0 5\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar\tx720{\*\pn \pnlvlbody\ilvl0\ls20\pnrnot0\pndec\pnstart5\pnindent360 }\faauto\ls20\rin0\lin720\itap0\pararsid5581439 {\insrsid5581439 
For the user to manage profiles (rename, remove nodes, delete profile, etc), a GUI would be useful. So that the user would not meddle with the directory structure of a profile and leading the way to the corruption of the profile.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid5581439 
\par With correct paths to files/folders in parms.py and the 4 parseable SCOP text files, the SCOP Domain Viewer can be run. Following a new release of SCOP files, replacing the old parseable files with the new ones is sufficient to update the Viewer.
\par 
\par 
\par }\pard\plain \s1\ql \li0\ri0\keepn\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\i\insrsid5581439 Sources
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5581439 
\par 1. \'93Scop Release Notes.\'94 Internet: Structural Classification of Proteins, }{\ul\cf2\insrsid5581439 http://scop.mrc-lmb.cam.ac.uk/scop/release-notes.html}{\insrsid5581439 , accessed May, 2004
\par 
\par 
\par }}